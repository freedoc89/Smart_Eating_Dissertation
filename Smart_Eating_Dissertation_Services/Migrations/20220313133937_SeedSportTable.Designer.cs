// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Smart_Eating_Dissertation_Services.Data;

#nullable disable

namespace Smart_Eating_Dissertation_Services.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220313133937_SeedSportTable")]
    partial class SeedSportTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Smart_Eating_Dissertation_Services.Models.Meals.Breakfast_EatingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Calorie_kcal")
                        .HasColumnType("float");

                    b.Property<double>("Carbohydrate_weight")
                        .HasColumnType("float");

                    b.Property<double>("Fat_weight")
                        .HasColumnType("float");

                    b.Property<string>("Name_of_food")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Protein_weight")
                        .HasColumnType("float");

                    b.Property<int?>("WeekDaysId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WeekDaysId");

                    b.ToTable("breakfast_EatingDatas_DB");
                });

            modelBuilder.Entity("Smart_Eating_Dissertation_Services.Models.Meals.Dinner_EatingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Calorie_kcal")
                        .HasColumnType("float");

                    b.Property<double>("Carbohydrate_weight")
                        .HasColumnType("float");

                    b.Property<double>("Fat_weight")
                        .HasColumnType("float");

                    b.Property<string>("Name_of_food")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Protein_weight")
                        .HasColumnType("float");

                    b.Property<int?>("WeekDaysId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WeekDaysId");

                    b.ToTable("dinner_EatingDatas_DB");
                });

            modelBuilder.Entity("Smart_Eating_Dissertation_Services.Models.Meals.Lunch_Main_Course_EatingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Calorie_kcal")
                        .HasColumnType("float");

                    b.Property<double>("Carbohydrate_weight")
                        .HasColumnType("float");

                    b.Property<double>("Fat_weight")
                        .HasColumnType("float");

                    b.Property<string>("Name_of_food")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Protein_weight")
                        .HasColumnType("float");

                    b.Property<int?>("WeekDaysId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WeekDaysId");

                    b.ToTable("lunch_Main_Course_EatingDatas_DB");
                });

            modelBuilder.Entity("Smart_Eating_Dissertation_Services.Models.Meals.Lunch_Soup_EatingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Calorie_kcal")
                        .HasColumnType("float");

                    b.Property<double>("Carbohydrate_weight")
                        .HasColumnType("float");

                    b.Property<double>("Fat_weight")
                        .HasColumnType("float");

                    b.Property<string>("Name_of_food")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Protein_weight")
                        .HasColumnType("float");

                    b.Property<int?>("WeekDaysId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WeekDaysId");

                    b.ToTable("lunch_Soup_EatingDatas_DB");
                });

            modelBuilder.Entity("Smart_Eating_Dissertation_Services.Models.Sports.SportData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("sportKcal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sportName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SportsData_DB");
                });

            modelBuilder.Entity("Smart_Eating_Dissertation_Services.Models.WeekDays.WeekDays", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Days")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WeekDays_EatingDatas_DB");
                });

            modelBuilder.Entity("Smart_Eating_Dissertation_Services.Models.Meals.Breakfast_EatingData", b =>
                {
                    b.HasOne("Smart_Eating_Dissertation_Services.Models.WeekDays.WeekDays", null)
                        .WithMany("Breakfast_eating_Foreignkey")
                        .HasForeignKey("WeekDaysId");
                });

            modelBuilder.Entity("Smart_Eating_Dissertation_Services.Models.Meals.Dinner_EatingData", b =>
                {
                    b.HasOne("Smart_Eating_Dissertation_Services.Models.WeekDays.WeekDays", null)
                        .WithMany("Dinner_eating_Foreignkey")
                        .HasForeignKey("WeekDaysId");
                });

            modelBuilder.Entity("Smart_Eating_Dissertation_Services.Models.Meals.Lunch_Main_Course_EatingData", b =>
                {
                    b.HasOne("Smart_Eating_Dissertation_Services.Models.WeekDays.WeekDays", null)
                        .WithMany("Lunch_main_eating_Foreignkey")
                        .HasForeignKey("WeekDaysId");
                });

            modelBuilder.Entity("Smart_Eating_Dissertation_Services.Models.Meals.Lunch_Soup_EatingData", b =>
                {
                    b.HasOne("Smart_Eating_Dissertation_Services.Models.WeekDays.WeekDays", null)
                        .WithMany("Lunch_soup_eating_Foreignkey")
                        .HasForeignKey("WeekDaysId");
                });

            modelBuilder.Entity("Smart_Eating_Dissertation_Services.Models.WeekDays.WeekDays", b =>
                {
                    b.Navigation("Breakfast_eating_Foreignkey");

                    b.Navigation("Dinner_eating_Foreignkey");

                    b.Navigation("Lunch_main_eating_Foreignkey");

                    b.Navigation("Lunch_soup_eating_Foreignkey");
                });
#pragma warning restore 612, 618
        }
    }
}
